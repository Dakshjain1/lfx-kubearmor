name: Test KubeArmor polices
run-name: ${{ github.actor }} is verifying KubeArmor policies for multiple app versions
on: [push]
jobs:
  Test-KubeArmor-Policies:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: set perms
        run: |
          pwd
          ls -la
          chmod +x ./.github/workflows/install-k3s.sh
          chmod +x ./contribution/k3s/install_k3s.sh
      - name: Setup a Kubernetes environment
        run: ./.github/workflows/install-k3s.sh
      - name: Wait for All Pods to be Ready
        run: |
          echo "Waiting for all pods to reach the Ready state..."
          while true; do
            not_ready_pods=$(kubectl get pods -A --no-headers | awk '$3 ~ /0/ {print $0}')
            if [ -z "$not_ready_pods" ]; then
              echo "All pods are in the Ready state."
              break
            else
              echo "The following pods are not ready yet:"
              echo "$not_ready_pods"
              echo "Retrying in 5 seconds..."
              sleep 5
            fi
          done
      - name: run get pods
        run: |
          kubectl get pods -A
          echo "k3s Environment setup complete."
      - name: install Helm
        run: | 
          curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3
          chmod 700 get_helm.sh
          ./get_helm.sh
          helm version
      - name: install KubeArmor
        run: | 
          curl -sfL http://get.kubearmor.io/ | sudo sh -s -- -b /usr/local/bin
          karmor install
      - name: install application
        run: | 
          helm install my-psql oci://registry-1.docker.io/bitnamicharts/postgresql --version 15.5.38 --create-namespace -n test-ksp
          helm list -A
      - name: waiting for kubearmor + application to be ready
        run: |
          echo "Waiting for all pods to reach the Ready state..."
          while true; do
            not_ready_pods=$(kubectl get pods -n test-ksp --no-headers | awk '$2 ~ /0/ {print $0}')
            if [ -z "$not_ready_pods" ]; then
              echo "All pods are in the Ready state."
              break
            else
              echo "The following pods are not ready yet:"
              echo "$not_ready_pods"
              echo "Retrying in 5 seconds..."
              sleep 5
            fi
          done
      - name: run get pods
        run: |
          kubectl get pods -A
      - name: install its policies
        run: | 
          kubectl apply -f ./postgres/policy.yaml
          kubectl get ksp -n test-ksp
      - name: run tests
        run: | 
          chmod +x ./postgres/test.sh
          ./postgres/test.sh
      # - name: run cleanup
        
      